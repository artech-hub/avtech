name: Build and Deploy Angular App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Verify Node.js and npm versions
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        
    - name: Clean npm cache
      run: npm cache clean --force
        
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm ci
        echo "Dependencies installed successfully"
        
    - name: Verify Angular CLI installation
      run: |
        echo "Checking Angular CLI availability..."
        # Check if ng is available through npm scripts
        npm run ng -- --version || echo "ng command not directly available (expected)"
        # Check if Angular CLI is in node_modules
        if [ -f "node_modules/.bin/ng" ]; then
          echo "Angular CLI found in node_modules/.bin/ng"
          ./node_modules/.bin/ng version
        else
          echo "Angular CLI not found in node_modules"
        fi
        
    - name: Build application for GitHub Pages
      run: |
        echo "Starting build process..."
        
        # Method 1: Try using npm run build:ci (CI-specific build)
        echo "Attempting build using npm run build:ci..."
        if npm run build:ci; then
          echo "Build successful using npm run build:ci"
        elif npm run build -- --configuration production --output-path=docs --base-href=/; then
          echo "Build successful using npm run build with args"
        else
          echo "npm run build failed, trying alternative methods..."
          
          # Method 2: Try direct ng command through npx
          echo "Attempting build using npx ng..."
          if npx ng build --configuration production --output-path=docs --base-href=/; then
            echo "Build successful using npx ng"
          else
            echo "npx ng failed, trying node_modules path..."
            
            # Method 3: Try direct path to ng
            if ./node_modules/.bin/ng build --configuration production --output-path=docs --base-href=/; then
              echo "Build successful using direct ng path"
            else
              echo "All build methods failed"
              exit 1
            fi
          fi
        fi
        
        echo "Build completed successfully"
        
    - name: Post-build setup for GitHub Pages
      run: |
        echo "Setting up files for GitHub Pages..."
        
        # Handle Angular 17+ browser subfolder structure
        if [ -d "docs/browser" ]; then
          echo "Found browser subfolder, moving files..."
          cp -r docs/browser/* docs/
          rm -rf docs/browser
          echo "Files moved from browser subfolder"
        else
          echo "No browser subfolder found"
        fi
        
        # Create 404.html from index.html for SPA routing
        if [ -f "docs/index.html" ]; then
          cp docs/index.html docs/404.html
          echo "Created 404.html for SPA routing"
        else
          echo "Warning: index.html not found!"
          ls -la docs/
        fi
        
        # Create .nojekyll file to bypass Jekyll processing
        touch docs/.nojekyll
        echo "Created .nojekyll file"
        
        # Ensure CNAME file exists for custom domain
        echo "avtechcompany.in" > docs/CNAME
        echo "Created CNAME file"
        
        # Verify final build structure
        echo "Final build structure:"
        ls -la docs/
        
        # Check if essential files exist
        if [ ! -f "docs/index.html" ]; then
          echo "ERROR: index.html not found in docs folder"
          exit 1
        fi
        
        if [ ! -f "docs/404.html" ]; then
          echo "ERROR: 404.html not found in docs folder"
          exit 1
        fi
        
        echo "All essential files are present"
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        cname: avtechcompany.in
